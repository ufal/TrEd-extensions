# -*- perl -*- ############################################################# Otakar Smrz, 2004/05/30
#
# count_syntax.btred #################################################################### 2004/08/25

# $Id$

our $VERSION = do { q $Revision$ =~ /(\d+)/; sprintf "%4.2f", $1 / 100 };


sub report ($$@) {

    warn "" . ( join "\t", $_[0], ThisAddress(), map { sprintf "%-12s", $_ } @_[1 .. @_ - 1] ) . "\n";
}

sub autostart {

    $file++;

    do {

        $tree++;

        do {

            unless ($this->parent()) {

                $xtid = $this->{'form'} || '';

                report ">< ", ( $this->{'afun'} || '???' ), $this->{'form'}
                    unless $this->{'afun'} eq 'AuxS';
            }
            else {

                $node++;

                report "-- ", ( $this->{'afun'} || '???' ), $this->{'x_lookup'}
                    unless $this->{'form'} ne '' or $none++ < 0;

                report "++ ", ( $this->{'afun'} || '???' ), $this->{'x_lookup'}, $this->{'x_comment'}
                    unless $this->{'x_comment'} eq '';

                report "<> ", ( $this->{'afun'} || '???' ), $this->{'x_lookup'}
                    unless $this->{'x_id_ord'} =~ /^$xtid\//;

                report "!! ", ( $this->{'afun'} || '???' ), $this->{'x_lookup'}, $this->{'comment'}
                    unless $this->{'comment'} eq '';

                report "?? ", ( $this->{'afun'} || '???' ), $this->{'x_lookup'}
                    unless $this->{'afun'} =~ /^ (?:

                        Pred|PredC|PredE|PredP|Pnom|Sb|Obj|Atr|Adv|
                        # AtrAdv|AdvAtr|
                        Coord|
                        # Ref|
                        # AtrObj|ObjAtr|AtrAtr|
                        AuxP|Apos|ExD|Atv|Ante|AuxC|
                        # AuxO|
                        AuxE|AuxY|AuxM|AuxG|AuxK
                        # |
                        # AuxX|AuxS|Generated|NA|???

                    ) $/x;
            }
        }
        while $this = $this->following();
    }
    while TredMacro::NextTree();
}

END {

    printf "%6d non-root nodes = tokens\n", $node;
    printf "%6d trees = paragraphs\n", $tree;
    printf "%6d files\n", $file;

    print "\n";

    printf "%6d nodes with no morphology\n", $none;

    print "\n";

    printf "%10.4f nodes per tree\n", $node / $tree;
    printf "%10.4f trees per file\n", $tree / $file;
    printf "%10.4f nodes per file\n", $node / $file;
}
